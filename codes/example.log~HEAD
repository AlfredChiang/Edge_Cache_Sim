DEBUG:root:====>calling function __init__
DEBUG:root:====>calling function makeNodes
DEBUG:root:====>calling function makeProducers
DEBUG:root:   
DEBUG:root:====>calling function makeConsumers
DEBUG:root:   
DEBUG:root:====>calling function makeFaces
DEBUG:root:   
DEBUG:root:====>calling function initialFibs
DEBUG:root:   
DEBUG:root:   
DEBUG:root:------------------ countLoop: 0-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:p3 10-01-2014,00:00:01,C13042,0,-22.880705,-43.492729,0.0

DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:prod1 10-01-2014,00:00:01,A412730,462.0,-22.875008,-43.241016,0.19

DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:prod2 10-01-2014,00:00:01,B115630,362.0,-22.8846,-43.2267,13.89

DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 1-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 2-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 3-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 4-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 5-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 6-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 7-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 8-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c3:p3: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c3:p3  0:0:9
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 9-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 10-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 11-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1  0:0:12
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5e18>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 12-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5e18>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet p3 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5e18>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 13-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5e18>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5e18>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 14-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5e18>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c4:prod1: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1  0:0:15
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101ea5e18>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 15-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101ea5e18>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101ea5e18>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 16-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101ea5e18>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod2: forward interest packet prod1 to f3
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2  0:0:17
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5fc8>])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque([<packet.InterestPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 17-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod1: forward interest packet p3 to f5
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5e18>])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque([<packet.InterestPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet prod1 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5fc8>])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5e18>, '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5fc8>, '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 18-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5e18>, '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5fc8>, '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5e18>, '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5fc8>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 19-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5e18>, '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5fc8>, '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', <packet.InterestPacket instance at 0x101ea5e18>, '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', <packet.InterestPacket instance at 0x101ea5fc8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 20-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:p3: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', <packet.InterestPacket instance at 0x101ea5e18>, '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', <packet.InterestPacket instance at 0x101ea5fc8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque([<packet.InterestPacket instance at 0x101ea5e18>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque([<packet.InterestPacket instance at 0x101ea5fc8>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 21-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque([<packet.InterestPacket instance at 0x101ea5e18>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f5  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque([<packet.InterestPacket instance at 0x101ea5fc8>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons1:prod1: forward interest packet prod2 to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5fc8>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 22-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5fc8>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5fc8>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 23-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod1: data packet p3 forwarded to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5fc8>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>, <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', <packet.DataPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5fc8>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 24-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5fc8>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', <packet.DataPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', <packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101ea5fc8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 25-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101ea5fc8>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', <packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101eae248>, <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque([<packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101ea5fc8>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 26-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101ea5fc8>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque([<packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod2: data packet prod1 forwarded to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101eae248>, <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>, <packet.DataPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101eae248>, <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 27-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101eae248>, <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet prod1 forwarded to f9
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>, <packet.DataPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>, <packet.DataPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 28-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet p3 forwarded to f8
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>, <packet.DataPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, <packet.DataPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 29-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, <packet.DataPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, <packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 30-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:c4:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, <packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101ea5ef0>, <packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 31-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101ea5ef0>, <packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons1:prod1: data packet prod2 forwarded to f4
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 32-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:c3:p3 : my data Recieved ****
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 33-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 34-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 35-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1  0:0:36
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 ++ f4  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 36-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 : my data Recieved ****
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 37-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 38-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 39-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 40-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod2: forward interest packet prod1 to f3
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 41-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 42-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 43-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 44-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 45-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 46-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 47-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 48-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:prod2 10-01-2014,00:00:48,B115630,362.0,-22.8857,-43.2293,29.08

DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2  0:0:49
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 49-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 50-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod2: data packet prod1 forwarded to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 51-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 52-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c3:p3: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c3:p3  0:0:53
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 53-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons1:prod1: sending interest packet prod2 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c4:prod1: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1  0:0:54
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 54-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 55-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 56-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: sending interest packet p3 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: sending interest packet prod1 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 57-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 58-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 : my data Recieved ****
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 59-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:c4:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 60-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:c3:p3 : my data Recieved ****
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 61-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:p3 10-01-2014,00:01:01,C13042,0,-22.880705,-43.492729,0.0

DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 62-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 63-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 64-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 65-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 66-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 67-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 68-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 69-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 70-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1  0:1:11
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 71-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 72-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 73-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2  0:1:14
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 74-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 75-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod2: sending interest packet prod1 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 76-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 77-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 78-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons1:prod1: forward interest packet prod2 to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 79-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 80-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c3:p3: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c3:p3  0:1:21
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 81-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 82-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 83-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 84-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet p3 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 85-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 86-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 87-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 88-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 89-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod1: forward interest packet p3 to f5
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons1:prod1: data packet prod2 forwarded to f4
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 90-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 91-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 92-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:p3: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 93-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 94-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 : my data Recieved ****
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c4:prod1: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1  0:1:35
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 95-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod1: data packet p3 forwarded to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 96-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 97-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet prod1 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 98-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 99-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 100-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet p3 forwarded to f8
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1  0:1:41
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 101-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 102-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c3:p3: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c3:p3  0:1:43
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 103-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 104-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:c3:p3 : my data Recieved ****
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 105-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod2: forward interest packet prod1 to f3
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 106-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet p3 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 107-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet prod1 forwarded to f9
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae3b0>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 108-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae3b0>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:prod1 10-01-2014,00:01:48,A412730,462.0,-22.874744,-43.24147,0.56

DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', <packet.DataPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 109-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', <packet.DataPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque([<packet.DataPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 110-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque([<packet.DataPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:c4:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 111-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod1: sending interest packet p3 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 112-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 113-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 114-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 115-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod2: data packet prod1 forwarded to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 116-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet p3 forwarded to f8
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 117-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:prod2 10-01-2014,00:01:57,B115630,362.0,-22.8849,-43.2351,29.82

DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 118-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 119-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 120-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:c3:p3 : my data Recieved ****
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 121-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:p3 10-01-2014,00:02:01,C13042,0,-22.880705,-43.492729,0.0

DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 122-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2  0:2:3
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 123-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 124-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 125-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 126-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c4:prod1: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1  0:2:7
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae248>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 127-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae248>])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons1:prod1: forward interest packet prod2 to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', <packet.InterestPacket instance at 0x101eae248>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 128-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', <packet.InterestPacket instance at 0x101eae248>, '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque([<packet.InterestPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 129-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque([<packet.InterestPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: sending interest packet prod1 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1  0:2:10
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae3b0>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', <packet.InterestPacket instance at 0x101eae248>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 130-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', <packet.InterestPacket instance at 0x101eae248>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae3b0>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', <packet.DataPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', <packet.InterestPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 131-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', <packet.InterestPacket instance at 0x101eae248>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', <packet.DataPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque([<packet.DataPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', <packet.InterestPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 132-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', <packet.InterestPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque([<packet.DataPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:c4:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 133-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 134-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod2: forward interest packet prod1 to f3
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 135-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae248>])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae248>, '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 136-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae248>, '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', <packet.InterestPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 137-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', <packet.InterestPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c3:p3: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c3:p3  0:2:18
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', <packet.InterestPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 138-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', <packet.InterestPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons1:prod1: data packet prod2 forwarded to f4
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque([<packet.InterestPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 139-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque([<packet.InterestPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 140-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 141-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet p3 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 142-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 143-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 : my data Recieved ****
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 144-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod2: data packet prod1 forwarded to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 145-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 146-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod1: forward interest packet p3 to f5
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 147-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 148-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 149-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:p3: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 150-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 151-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 152-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod1: data packet p3 forwarded to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 153-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 154-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 155-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 156-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 157-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet p3 forwarded to f8
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 158-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2  0:2:39
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 159-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 160-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c3:p3: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c3:p3  0:2:41
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 161-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:c3:p3 : my data Recieved ****
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 162-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque([<packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 163-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque([<packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons1:prod1: sending interest packet prod2 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 164-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet p3 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 165-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 166-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 167-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 168-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 : my data Recieved ****
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 169-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod1: sending interest packet p3 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 170-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 171-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 172-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 173-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 174-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet p3 forwarded to f8
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 175-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 176-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 177-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 178-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:c3:p3 : my data Recieved ****
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1  0:2:59
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 179-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 180-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 181-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:p3 10-01-2014,00:03:01,C13042,0,-22.880705,-43.492729,0.0

DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c4:prod1: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1  0:3:2
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 182-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 183-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod2: forward interest packet prod1 to f3
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque([<packet.InterestPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 184-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque([<packet.InterestPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet prod1 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 185-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:prod2 10-01-2014,00:03:05,B115630,362.0,-22.8775,-43.2411,70.38

DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 186-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 187-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 188-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 189-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 190-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 191-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:prod1 10-01-2014,00:03:11,A412730,462.0,-22.875837,-43.241505,0.74

DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 192-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 193-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod2: data packet prod1 forwarded to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 194-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet prod1 forwarded to f9
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', <packet.DataPacket instance at 0x101ea5dd0>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 195-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', <packet.DataPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', <packet.DataPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 196-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', <packet.DataPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque([<packet.DataPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 197-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque([<packet.DataPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:c4:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2  0:3:18
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 198-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 199-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c3:p3: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c3:p3  0:3:20
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 200-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 201-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque([<packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 202-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque([<packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons1:prod1: forward interest packet prod2 to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 203-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet p3 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 204-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 205-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1  0:3:26
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', <packet.InterestPacket instance at 0x101eae320>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 206-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', <packet.InterestPacket instance at 0x101eae320>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', <packet.InterestPacket instance at 0x101eae320>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 207-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', <packet.InterestPacket instance at 0x101eae320>, '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 208-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod1: forward interest packet p3 to f5
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 209-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 210-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod2: sending interest packet prod1 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 211-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:p3: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 212-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 213-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons1:prod1: data packet prod2 forwarded to f4
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 214-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod1: data packet p3 forwarded to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 215-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 216-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 217-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 218-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 : my data Recieved ****
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c4:prod1: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1  0:3:39
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 219-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet p3 forwarded to f8
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 220-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 221-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: sending interest packet prod1 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', <packet.DataPacket instance at 0x101ea5dd0>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 222-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', <packet.DataPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', <packet.DataPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 223-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:c3:p3 : my data Recieved ****
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', <packet.DataPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque([<packet.DataPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 224-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque([<packet.DataPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:c4:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 225-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 226-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:prod1 10-01-2014,00:03:46,A412730,462.0,-22.875847,-43.241505,0.0

DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 227-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 228-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 229-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 230-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 231-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 232-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 233-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 234-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 235-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 236-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 237-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 238-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 239-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 240-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 241-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:p3 10-01-2014,00:04:01,C13042,0,-22.880777,-43.492691,8.0

DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 242-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 243-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 244-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:prod2 10-01-2014,00:04:04,B115630,362.0,-22.8749,-43.243,0.0

DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 245-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 246-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 247-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 248-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 249-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 250-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 251-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c3:p3: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c3:p3  0:4:12
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 252-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 253-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1  0:4:14
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 254-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 255-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet p3 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2  0:4:16
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae320>])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 256-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae320>])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae320>, '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 257-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae320>, '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', <packet.InterestPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 258-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod2: forward interest packet prod1 to f3
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', <packet.InterestPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', <packet.InterestPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 259-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', <packet.InterestPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque([<packet.InterestPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 260-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod1: forward interest packet p3 to f5
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque([<packet.InterestPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons1:prod1: forward interest packet prod2 to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae320>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 261-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae320>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae320>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 262-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae320>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 263-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:p3: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f5  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 264-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 265-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 266-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod1: data packet p3 forwarded to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 267-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:prod1 ++ f3  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 268-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod2: data packet prod1 forwarded to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>, '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 269-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae3b0>, '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c4:prod1: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1  0:4:30
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae3b0>, '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 270-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae3b0>, '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae3b0>, '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 271-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet p3 forwarded to f8
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae3b0>, '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons1:prod1: data packet prod2 forwarded to f4
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 272-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>])
DEBUG:root:cons2:prod2 -- f9  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet prod1 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 273-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 274-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1  0:4:35
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae320>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', <packet.DataPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 275-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae320>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:c3:p3 : my data Recieved ****
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', <packet.DataPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae320>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque([<packet.DataPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 276-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae320>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque([<packet.DataPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 : my data Recieved ****
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 277-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 278-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 279-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod2: sending interest packet prod1 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 280-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 281-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 282-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet prod1 forwarded to f9
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae3b0>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 283-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae3b0>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', <packet.DataPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 284-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', <packet.DataPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque([<packet.DataPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 285-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque([<packet.DataPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:c4:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 286-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 287-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 288-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 289-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 290-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 291-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c3:p3: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c3:p3  0:4:52
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 292-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 293-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:prod2 10-01-2014,00:04:53,B115630,362.0,-22.8718,-43.2455,56.12

DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c4:prod1: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1  0:4:54
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae320>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 294-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae320>])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', <packet.InterestPacket instance at 0x101eae320>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 295-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet p3 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', <packet.InterestPacket instance at 0x101eae320>, '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque([<packet.InterestPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 296-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque([<packet.InterestPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: sending interest packet prod1 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae3b0>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:prod1 10-01-2014,00:04:56,A412730,462.0,-22.875843,-43.241489,0.0

DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae3b0>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 297-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae3b0>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', <packet.DataPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 298-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', <packet.DataPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque([<packet.DataPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 299-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque([<packet.DataPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:c4:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 300-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod1: forward interest packet p3 to f5
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 301-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:p3 10-01-2014,00:05:01,C13042,0,-22.882526,-43.492039,16.0

DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 302-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 303-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:p3: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 304-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 305-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 306-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod1: data packet p3 forwarded to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2  0:5:7
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 307-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 308-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 309-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 310-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 311-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet p3 forwarded to f8
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons1:prod1: forward interest packet prod2 to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 312-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 313-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 314-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 315-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:c3:p3 : my data Recieved ****
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 316-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 317-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 318-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1  0:5:19
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 319-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 320-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 321-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 322-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons1:prod1: data packet prod2 forwarded to f4
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 323-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod2: forward interest packet prod1 to f3
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 324-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 325-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 326-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 327-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 : my data Recieved ****
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 328-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 329-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 330-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 331-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:prod1 10-01-2014,00:05:31,A412730,462.0,-22.875843,-43.241489,0.0

DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 332-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c3:p3: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c3:p3  0:5:33
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2  0:5:33
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 333-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod2: data packet prod1 forwarded to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 334-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 335-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 336-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet p3 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 ++ f4  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 337-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons1:prod1: sending interest packet prod2 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 338-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 339-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c4:prod1: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1  0:5:40
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae248>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 340-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae248>])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', <packet.InterestPacket instance at 0x101eae248>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 341-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod1: forward interest packet p3 to f5
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', <packet.InterestPacket instance at 0x101eae248>, '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque([<packet.InterestPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 342-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 : my data Recieved ****
DEBUG:root:cons2:prod2 -- f9  deque([<packet.InterestPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet prod1 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae248>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 343-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae248>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 344-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:p3: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae248>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 345-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 346-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 347-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod1: data packet p3 forwarded to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>, <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 348-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>, <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>, <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 349-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>, <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101ea5dd0>, <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 350-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101ea5dd0>, <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101ea5dd0>, <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 351-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101ea5dd0>, <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101ea5dd0>, <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 352-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101ea5dd0>, <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet prod1 forwarded to f9
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', <packet.DataPacket instance at 0x101ea5dd0>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 353-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet p3 forwarded to f8
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', <packet.DataPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', <packet.DataPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 354-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', <packet.DataPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque([<packet.DataPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 355-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque([<packet.DataPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:c4:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 356-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 357-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:c3:p3 : my data Recieved ****
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 358-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 359-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 360-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 361-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:p3 10-01-2014,00:06:01,C13042,0,-22.883184,-43.489677,18.0

DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 362-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 363-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c3:p3: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c3:p3  0:6:4
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 364-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 365-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 366-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:prod1 10-01-2014,00:06:06,A412730,462.0,-22.875847,-43.241505,0.0

DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 367-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet p3 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 368-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1  0:6:9
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae290>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 369-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae290>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae290>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 370-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae290>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 371-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 372-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod1: sending interest packet p3 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:prod2 10-01-2014,00:06:12,B115630,362.0,-22.8593,-43.2476,70.56

DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 373-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod2: forward interest packet prod1 to f3
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 374-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae290>])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2  0:6:15
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae290>, '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 375-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae290>, '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', <packet.InterestPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 376-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', <packet.InterestPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 377-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque([<packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 378-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque([<packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet p3 forwarded to f8
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 379-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons1:prod1: forward interest packet prod2 to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 380-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 381-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 382-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:c3:p3 : my data Recieved ****
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 383-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod2: data packet prod1 forwarded to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 384-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>, <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 385-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>, <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 386-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 387-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae248>, <packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 388-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae248>, <packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c4:prod1: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1  0:6:29
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae248>, <packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 389-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae248>, <packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 390-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons1:prod1: data packet prod2 forwarded to f4
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 391-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons2:prod2 -- f9  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet prod1 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 392-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 393-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 394-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 395-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 : my data Recieved ****
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 396-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 397-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 398-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 399-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 400-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 401-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 402-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet prod1 forwarded to f9
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 403-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', <packet.DataPacket instance at 0x101ea5ef0>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1  0:6:44
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 404-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', <packet.DataPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 405-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque([<packet.DataPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:c4:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 406-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 407-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 408-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod2: sending interest packet prod1 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 409-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 410-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:prod2 10-01-2014,00:06:50,B115630,362.0,-22.8563,-43.2474,15.0

DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 411-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 412-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c4:prod1: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1  0:6:53
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 413-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 414-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque([<packet.InterestPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 415-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque([<packet.InterestPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet prod1 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 416-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 417-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c3:p3: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c3:p3  0:6:58
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 418-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 419-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 420-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:p3 10-01-2014,00:07:00,C13042,0,-22.882605,-43.486675,11.0

DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2  0:7:1
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 421-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet p3 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 422-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 423-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 424-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque([<packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 425-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque([<packet.InterestPacket instance at 0x101ea5ef0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons1:prod1: forward interest packet prod2 to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1  0:7:6
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, <packet.InterestPacket instance at 0x101eae290>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 426-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod1: forward interest packet p3 to f5
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, <packet.InterestPacket instance at 0x101eae290>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet prod1 forwarded to f9
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, <packet.InterestPacket instance at 0x101eae290>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 427-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', <packet.InterestPacket instance at 0x101eae3b0>])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, <packet.InterestPacket instance at 0x101eae290>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, <packet.InterestPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 428-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', <packet.InterestPacket instance at 0x101eae3b0>, '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5ef0>, <packet.InterestPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 429-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque([<packet.InterestPacket instance at 0x101eae3b0>, '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:p3: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101ea5ef0>, <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:c4:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101ea5ef0>, <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 430-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101ea5ef0>, <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 431-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod2: forward interest packet prod1 to f3
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 432-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae290>])
DEBUG:root:prod1 -- f5  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod1: data packet p3 forwarded to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae290>, '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 433-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae290>, '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', <packet.InterestPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 434-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', <packet.InterestPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 435-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque([<packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 436-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque([<packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons1:prod1: data packet prod2 forwarded to f4
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 437-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 438-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet p3 forwarded to f8
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 439-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 440-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque([<packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 441-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque([<packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod2: data packet prod1 forwarded to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 : my data Recieved ****
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 442-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:c3:p3 : my data Recieved ****
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 443-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 444-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 445-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 446-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 447-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 448-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1  0:7:29
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 449-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 450-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 451-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 452-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 453-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 454-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod2: sending interest packet prod1 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 455-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 456-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 457-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 458-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 459-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 460-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2  0:7:41
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c4:prod1: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1  0:7:41
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae248>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 461-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae248>])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', <packet.InterestPacket instance at 0x101eae248>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 462-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', <packet.InterestPacket instance at 0x101eae248>, '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque([<packet.InterestPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 463-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque([<packet.InterestPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet prod1 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae248>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 464-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae248>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 465-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae248>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons1:prod1: forward interest packet prod2 to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 466-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 467-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 468-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 469-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 470-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 471-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 472-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 473-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 474-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet prod1 forwarded to f9
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 475-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae1b8>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 476-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', <packet.DataPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 477-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque([<packet.DataPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:c4:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons1:prod1: data packet prod2 forwarded to f4
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 478-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c3:p3: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c3:p3  0:7:59
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 479-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:prod2 10-01-2014,00:07:59,B115630,362.0,-22.8515,-43.2473,48.71

DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 480-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:p3 10-01-2014,00:08:00,C13042,0,-22.88232,-43.483334,16.0

DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 481-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 482-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet p3 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 : my data Recieved ****
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 483-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 484-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 485-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 486-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 487-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod1: forward interest packet p3 to f5
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 488-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 489-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 490-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:p3: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 491-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 492-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1  0:8:13
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 493-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod1: data packet p3 forwarded to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 494-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 495-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 496-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 497-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 498-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod2: forward interest packet prod1 to f3
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2  0:8:19
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 499-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet p3 forwarded to f8
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 500-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 501-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 502-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 503-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:c3:p3 : my data Recieved ****
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons1:prod1: forward interest packet prod2 to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 504-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 505-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c4:prod1: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1  0:8:26
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae248>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 506-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae248>])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', <packet.InterestPacket instance at 0x101eae248>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 507-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', <packet.InterestPacket instance at 0x101eae248>, '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque([<packet.InterestPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 508-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod2: data packet prod1 forwarded to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque([<packet.InterestPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet prod1 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae248>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 509-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae248>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101eae2d8>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>, <packet.DataPacket instance at 0x101eae4d0>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 510-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae248>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>, <packet.DataPacket instance at 0x101eae4d0>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>, <packet.DataPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 511-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>, <packet.DataPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, <packet.DataPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 512-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, <packet.DataPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae290>, <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 513-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae290>, <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae290>, <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 514-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae290>, <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 515-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons1:prod1: data packet prod2 forwarded to f4
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 516-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 517-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 518-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 519-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet prod1 forwarded to f9
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque([<packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 520-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque([<packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 : my data Recieved ****
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2  0:8:41
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 521-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 ++ f9  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 522-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:c4:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 523-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 524-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 525-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons1:prod1: sending interest packet prod2 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 526-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 527-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c3:p3: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c3:p3  0:8:48
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 528-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 529-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c4:prod1: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1  0:8:50
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae320>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque([<packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 530-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque([<packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 : my data Recieved ****
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae320>])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1  0:8:51
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', <packet.InterestPacket instance at 0x101eae320>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae248>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 531-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae248>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet p3 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', <packet.InterestPacket instance at 0x101eae320>, '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque([<packet.InterestPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 532-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae248>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque([<packet.InterestPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: sending interest packet prod1 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 533-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 534-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 535-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:c4:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101eae248>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 536-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod1: forward interest packet p3 to f5
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101eae248>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod2: sending interest packet prod1 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 537-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 538-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 539-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:p3: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 540-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:p3 10-01-2014,00:09:00,C13042,0,-22.88063,-43.479172,27.0

DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 541-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 542-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod1: data packet p3 forwarded to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 543-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 544-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 545-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 546-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 547-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 548-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet p3 forwarded to f8
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 549-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 550-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 551-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 552-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:c3:p3 : my data Recieved ****
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 553-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2  0:9:14
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 554-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 555-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 556-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 557-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 558-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons1:prod1: forward interest packet prod2 to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 559-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 560-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 561-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 562-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 563-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 564-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 565-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 566-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 567-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c4:prod1: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1  0:9:28
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 568-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 569-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 570-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet prod1 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons1:prod1: data packet prod2 forwarded to f4
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 571-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 572-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 573-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 574-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c3:p3: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c3:p3  0:9:35
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae4d0>])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 575-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae4d0>])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons2:prod2 -- f4  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 : my data Recieved ****
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', <packet.InterestPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 576-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', <packet.InterestPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', <packet.InterestPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 577-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', <packet.InterestPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque([<packet.InterestPacket instance at 0x101eae4d0>, '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 578-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque([<packet.InterestPacket instance at 0x101eae4d0>, '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: sending interest packet p3 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 579-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae248>])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 580-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae248>, '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 581-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', <packet.DataPacket instance at 0x101eae248>, '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet prod1 forwarded to f9
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2  0:9:42
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 582-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque([<packet.DataPacket instance at 0x101eae248>, '0', '0', '0'])
DEBUG:root:c3:p3 : my data Recieved ****
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 583-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 584-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:c4:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 585-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 586-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons1:prod1: sending interest packet prod2 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 587-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 588-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 589-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', <packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1  0:9:50
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 590-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 591-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 : my data Recieved ****
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 592-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 593-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 594-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 595-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod2: forward interest packet prod1 to f3
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 596-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 597-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 598-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 599-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 600-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:p3 10-01-2014,00:10:00,C13042,0,-22.880371,-43.475208,23.0

DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 601-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c4:prod1: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1  0:10:2
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 602-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 603-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 604-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: sending interest packet prod1 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 605-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod2: data packet prod1 forwarded to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae320>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 606-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', <packet.DataPacket instance at 0x101eae320>, '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 607-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque([<packet.DataPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:c4:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 608-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 609-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 610-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 611-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae2d8>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 612-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 613-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 614-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 615-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 616-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 617-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 618-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c3:p3: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c3:p3  0:10:19
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 619-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 620-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 621-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 622-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet p3 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 623-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2  0:10:24
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae290>])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 624-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae290>])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae290>, '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 625-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae290>, '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', <packet.InterestPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 626-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', <packet.InterestPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 627-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod1: forward interest packet p3 to f5
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque([<packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 628-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', <packet.InterestPacket instance at 0x101ea5dd0>])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque([<packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons1:prod1: forward interest packet prod2 to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae290>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 629-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', <packet.InterestPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae290>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae290>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 630-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque([<packet.InterestPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:p3: packet p3 sent out to f5
DEBUG:root:   
DEBUG:root:   
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae290>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 631-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', <packet.DataPacket instance at 0x101eae4d0>])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', <packet.DataPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 632-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', <packet.DataPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque([<packet.DataPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 633-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque([<packet.DataPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod1: data packet p3 forwarded to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 634-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 635-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1  0:10:36
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae290>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 636-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae290>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae290>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 637-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae290>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 638-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 639-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet p3 forwarded to f8
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 640-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons1:prod1: data packet prod2 forwarded to f4
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c3:p3: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c3:p3  0:10:41
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c4:prod1: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1  0:10:41
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae488>])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque([<packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 641-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque([<packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:prod2: forward interest packet prod1 to f3
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae488>])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', <packet.InterestPacket instance at 0x101eae488>, '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 642-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae290>])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', <packet.InterestPacket instance at 0x101eae488>, '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', <packet.DataPacket instance at 0x101ea5dd0>, '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae290>, '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', <packet.InterestPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque([<packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', <packet.DataPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 643-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae290>, '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque([<packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0'])
DEBUG:root:c3:p3 : my data Recieved ****
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', <packet.InterestPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', <packet.DataPacket instance at 0x101ea5dd0>, '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet prod1 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', <packet.InterestPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque([<packet.InterestPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', <packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 644-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:prod1 -- f3  deque(['0', '0', <packet.InterestPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque([<packet.InterestPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: sending interest packet p3 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', <packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque([<packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 645-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:prod1 -- f3  deque(['0', <packet.InterestPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae4d0>])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque([<packet.DataPacket instance at 0x101ea5dd0>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 : my data Recieved ****
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque([<packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 646-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:prod1 -- f3  deque([<packet.InterestPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f3
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', <packet.DataPacket instance at 0x101eae4d0>, '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 647-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', <packet.DataPacket instance at 0x101eae4d0>, '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque([<packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 648-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0', '0'])
DEBUG:root:====>calling function sendResponse
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function sendOut
DEBUG:root:prod1: packet prod1 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque([<packet.DataPacket instance at 0x101eae4d0>, '0', '0', '0'])
DEBUG:root:c3:p3 : my data Recieved ****
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 649-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', <packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:prod1 ++ f3  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 650-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:prod1 ++ f3  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 651-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:prod2: data packet prod1 forwarded to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:prod2: packet prod1 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 652-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', <packet.DataPacket instance at 0x101eae488>])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 653-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', <packet.DataPacket instance at 0x101eae488>, '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 654-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardDataPacketHalfCache
DEBUG:root:cons2:prod2: data packet prod1 forwarded to f9
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:====>calling function cacheManagementByFrequency
DEBUG:root:====>calling function cacheReplace
DEBUG:root:   
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 655-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', <packet.DataPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 656-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', <packet.DataPacket instance at 0x101eae488>, '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 657-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:c4:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f2  deque([<packet.DataPacket instance at 0x101eae488>, '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 658-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 659-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 660-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 661-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:p3 10-01-2014,00:11:01,C13042,0,-22.880293,-43.472672,31.0

DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 662-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 663-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 664-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 665-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 666-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 667-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 668-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 669-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 670-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 671-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 672-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 673-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 674-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:prod2 10-01-2014,00:11:14,B115630,362.0,-22.838,-43.2557,70.19

DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 675-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 676-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod2 sent out to f4
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2  0:11:17
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae488>])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 677-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae488>])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae488>, '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 678-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae488>, '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c4:prod1: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1  0:11:19
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', <packet.InterestPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae320>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 679-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', <packet.InterestPacket instance at 0x101eae320>])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', <packet.InterestPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', <packet.InterestPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', <packet.InterestPacket instance at 0x101eae320>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 680-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', <packet.InterestPacket instance at 0x101eae320>, '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', <packet.InterestPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:====>calling function sendRequest
DEBUG:root:====>calling function sendOut
DEBUG:root:c3:p3: packet p3 sent out to f8
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c3:p3  0:11:21
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque([<packet.InterestPacket instance at 0x101eae488>, '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque([<packet.InterestPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 681-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque([<packet.InterestPacket instance at 0x101eae320>, '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: sending interest packet prod1 back from cs (CACHE HIT!)
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet prod1 sent out to f9
DEBUG:root:   
DEBUG:root:   
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque([<packet.InterestPacket instance at 0x101eae488>, '0', '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons1:prod1: forward interest packet prod2 to f2
DEBUG:root:====>calling function sendOut
DEBUG:root:cons1:prod1: packet prod2 sent out to f2
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae488>])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 682-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae488>])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', '0', <packet.InterestPacket instance at 0x101eae1b8>, '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', '0', <packet.DataPacket instance at 0x101eae290>])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae488>, '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 683-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae488>, '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque(['0', <packet.InterestPacket instance at 0x101eae1b8>, '0', '0'])
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque(['0', <packet.DataPacket instance at 0x101eae290>, '0'])
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:------------------ countLoop: 684-------------------------------
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:p3 -- f5  deque(['0', '0', '0'])
DEBUG:root:p3 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod1 -- f1  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 -- f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processIncomingPacketsHalfCache
DEBUG:root:prod2 -- f2  deque(['0', '0', '0', <packet.InterestPacket instance at 0x101eae488>, '0', '0'])
DEBUG:root:prod2 -- f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 -- f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:c3:p3 -- f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f8  deque([<packet.InterestPacket instance at 0x101eae1b8>, '0', '0', '0'])
DEBUG:root:====>calling function forwardInterestPacket
DEBUG:root:cons2:prod2: forward interest packet p3 to f1
DEBUG:root:====>calling function sendOut
DEBUG:root:cons2:prod2: packet p3 sent out to f1
DEBUG:root:   
DEBUG:root:   
DEBUG:root:cons2:prod2 -- f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 -- f9  deque(['0', '0', '0'])
DEBUG:root:c4:prod1 -- f9  deque([<packet.DataPacket instance at 0x101eae290>, '0', '0'])
DEBUG:root:c4:prod1 : my data Recieved ****
DEBUG:root:cons1:prod1 -- f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 -- f7  deque(['0', '0', '0', '0'])
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function updateState
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function requestGenerator
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:p3 ++ f5  deque(['0', '0', '0'])
DEBUG:root:p3 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod1 ++ f1  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod1 ++ f5  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:prod2 ++ f2  deque(['0', '0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f3  deque(['0', '0', '0', '0', '0'])
DEBUG:root:prod2 ++ f6  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c3:p3 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:c3:p3 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons2:prod2 ++ f8  deque(['0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f1  deque(['0', '0', '0', '0', <packet.InterestPacket instance at 0x101eae1b8>])
DEBUG:root:cons2:prod2 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons2:prod2 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:c4:prod1 ++ f9  deque(['0', '0', '0'])
DEBUG:root:   
DEBUG:root:====>calling function processOutgoingpackets
DEBUG:root:cons1:prod1 ++ f2  deque(['0', '0', <packet.InterestPacket instance at 0x101eae488>, '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f4  deque(['0', '0', '0', '0', '0'])
DEBUG:root:cons1:prod1 ++ f7  deque(['0', '0', '0', '0'])
DEBUG:root:   
DEBUG:root:   
